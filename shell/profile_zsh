# -*- mode: sh -*-

#####################################################################
# profile_zsh: this provides bash specific config
#

# include common shell functionallity
. ~/.profile.d/shell/profile_sh

setopt \
  bashautolist \
  extendedglob \
  globdots \
  longlistjobs \
  noautoparamslash \
  nobeep \
  nocorrect \
  nocorrectall \
  nohup \
  nopromptcr \
  norecexact \
  pushdsilent \
  nopushdtohome \
  listambiguous \
  HIST_NO_STORE \
  HIST_IGNORE_DUPS \
  HIST_REDUCE_BLANKS

setopt INC_APPEND_HISTORY 2>/dev/null

# emacs like key bindings
bindkey -e

# add some keys
bindkey "${terminfo[kdch1]}" delete-char
bindkey "${terminfo[kbs]}"   backward-delete-char
bindkey "${terminfo[khome]}" beginning-of-line
bindkey "${terminfo[kend]}"  end-of-line
bindkey '\e^[[C' forward-word
bindkey '\e^[[D' backward-word

# make forward/backword-word work in tmux
bindkey "^[[1;3C" forward-word
bindkey "^[[1;3D" backward-word

#
update_title () {
    if [ -n "${TMUX}" ]; then
        print -Pn "\e]2;${1}\a"
    else
        print -Pn "\e]2;%m :: ${1}\a"
    fi
}

# promt
if [ "${TERM}" != "dumb" ]; then
    export PS1='%m %B%40<..<%4~%b '

    precmd () {
        update_title "zsh"
    }

    preexec () {
        update_title "${(z)1}"
    }

    chpwd () {
        if [ -d .pyenv ]; then
            export PYTHONUSERBASE="$(pwd)/.pyenv"
            export PIP_USER=true
            path[1,0]="${PYTHONUSERBASE}/bin"
        elif [ -n "${PYTHONUSERBASE}" ]; then
            path=("${(@)path:#${PYTHONUSERBASE}/bin}")
            unset PYTHONUSERBASE PIP_USER
        fi
    }
else
    unsetopt zle
    export PS1='> '
fi
